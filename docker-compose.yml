version: "3.8"

volumes:
  pg-data: 
    name: sandbox-pg-data
  pgadmin-data: 
    name: sandbox-pgadmin

networks:
  sandbox-net:
    name: sandbox-net

services:
  prod:
    image: iudx/sandbox-backend-prod:latest
    container_name: sandbox-backend-prod
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - pg
    networks:
      - sandbox-net

  dev:
    image: iudx/sandbox-backend-dev:latest
    container_name: sandbox-backend-dev
    env_file:
      - .env
    volumes:
      - ./:/app
    network_mode: host
    depends_on:
      - pg
      - pgadmin
    entrypoint: ["/bin/sh", "./scripts/entrypoint.dev.sh"]

  test:
    image: iudx/sandbox-backend-test:latest
    container_name: sandbox-backend-test
    env_file:
      - .env
    volumes:
      - ./:/app
    networks:
      - sandbox-net
    entrypoint: ["/bin/sh", "./scripts/entrypoint.test.sh"]
    
  pg:
    image: postgres
    container_name: postgres
    restart: on-failure
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./db/init_schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - pg-data:/var/lib/postgresql/data
    networks:
      - sandbox-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin@123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks: 
      - sandbox-net 
